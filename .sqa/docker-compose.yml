version: "3.7"

services:
  essentials:
    build:
      context: "."
      dockerfile: "./docker_essentials/aio_v4/Dockerfile.essentials"
    image: "worsica/jenkins-worsica-essentials:${GIT_BRANCH}"

  sphinx:
    build:
      context: "./WORSICA_github_io"
      dockerfile: "./docker_sphinx/aio_v4/Dockerfile.jenkins"
      cache_from:
        - "worsica/jenkins-worsica-essentials:${GIT_BRANCH}"
    image: "worsica/jenkins-worsica-sphinx:${GIT_BRANCH}"
    container_name: "sphinx"
    volumes:
      - ./WORSICA_github_io:/usr/local/WORSICA.github.io
    command: sleep infinity
    depends_on:
      - essentials

  processing:
    build:
      context: "./worsica_processing"
      dockerfile: "./docker_backend/aio_v4/Dockerfile.jenkins"
      cache_from:
        - "worsica/jenkins-worsica-essentials:${GIT_BRANCH}"
    image: "worsica/jenkins-worsica-processing:${GIT_BRANCH}"
    container_name: "processing"
    hostname: "processing"
    volumes:
     - ./worsica_processing:/usr/local/worsica_web_products
     - /jenkins/workspace:/jenkins/workspace
    command: sleep infinity
    depends_on:
      - essentials
    networks:
      - worsica_net

  intermediate:
    build:
      context: "./worsica_intermediate"
      dockerfile: "./docker_intermediate/aio_v4/Dockerfile.jenkins"
      cache_from:
        - "worsica/jenkins-worsica-essentials:${GIT_BRANCH}"
    image: "worsica/jenkins-worsica-intermediate:${GIT_BRANCH}"
    container_name: "intermediate"
    hostname: "intermediate"
    volumes:
     - ./worsica_intermediate:/usr/local/worsica_web_intermediate
     - ./worsica_processing:/usr/local/worsica_web_products
     - /jenkins/workspace:/jenkins/workspace
    entrypoint: "/bin/bash"
    command: "/usr/local/worsica_web_intermediate/worsica_runserver.sh"
    depends_on:
      - essentials
      - postgis
      - rabbitmq
    networks:
      - worsica_net
    ports:
      - "8002:8002"

  frontend:
    build:
      context: "./worsica_frontend"
      dockerfile: "./docker_frontend/aio_v4/Dockerfile.jenkins"
      cache_from:
        - "worsica/jenkins-worsica-essentials:${GIT_BRANCH}"
    image: "worsica/jenkins-worsica-frontend:${GIT_BRANCH}"
    container_name: "frontend"
    hostname: "frontend"
    volumes:
     - ./worsica_frontend:/usr/local/worsica_web
     - /jenkins/workspace:/jenkins/workspace
    entrypoint: "/bin/bash"
    command: "/usr/local/worsica_web/worsica_runserver.sh"
    depends_on:
      - essentials
      - postgis
      - rabbitmq
      - intermediate
    networks:
      - worsica_net
    ports:
      - "8001:8001"

  postgis:
    image: "mdillon/postgis:9.6"
    container_name: "postgis"
    hostname: "postgis"
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - worsica_net
    environment:
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "LANG=en_US.utf8"
      - "PGDATA=/var/lib/postgresql/data"
    restart: "on-failure:5"

  rabbitmq:
    image: "rabbitmq:3.7-management"
    container_name: "rabbitmq"
    hostname: "worsica-backend"
    volumes:
        - rabbitmq_data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
    networks:
      - worsica_net
    environment:
        - "RABBITMQ_DEFAULT_VHOST=corsica_vhost"
        - "RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}"
        - "RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}"
    restart: "on-failure:5"

#  nextcloud:
#    image: "nextcloud"
#    container_name: "nextcloud"
#    hostname: "nextcloud"
#    networks:
#      - worsica_net
#    environment:
#        - "NEXTCLOUD_TRUSTED_DOMAINS='localhost:8080','nextcloud'"
#        - "NEXTCLOUD_ADMIN_USER=${WORSICA_NEXTCLOUD_USER}"
#        - "NEXTCLOUD_ADMIN_PASSWORD=${WORSICA_NEXTCLOUD_PASSWORD}"
#    ports:
#        - "8080:80"
#    restart: "on-failure:5"

#    dataverse_postgres:
#        build:  ./dataverse-docker/postgresql/
#        container_name: db
#        ports:
#        - "5435:5432"
#        environment:
#           - "POSTGRES_HOST_AUTH_METHOD=trust"
#        volumes:
#        - ./data/db:/var/lib/postgresql/data
#        - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
#        networks:
#         - worsica_net
#    dataverse_solr:
#        build: ./dataverse-docker/solr7/
#        container_name: solr
#        ports:
#        - "8985:8983"
#        environment:
#          - "SOLR_HOST=solr"
#          - "SOLR_PORT=8983"
#        volumes:
#        - ./data/solr:/usr/local/solr-7.3.0/example/solr/collection1/data
#        networks:
#         - worsica_net
#  dataverse:
#    image: "dataverse"
#    build: ./dataverse-docker/dataversedock/
#    container_name: "dataverse"
#    hostname: "dataverse"
#    networks:
#      - worsica_net
#    ports:
#        - "443:443"
#        - "8081:8080"
#        - "8181:8181"
#        - "4848:4848"
#    environment:
#      - "HOST_DNS_ADDRESS=0.0.0.0"
#      - "LANG=en"
#      - "BUNDLEPROPERTIES=Bundle.properties"
#      - "GLASSFISH_DIRECTORY=/opt/glassfish4"
#      - "ADMIN_EMAIL=admin@localhost"
#      - "MAIL_SERVER=mailrelay"
#      - "POSTGRES_ADMIN_PASSWORD=secret"
#      - "POSTGRES_SERVER=postgres"
#      - "POSTGRES_PORT=5432"
#      - "POSTGRES_DATABASE=dvndb"
#      - "POSTGRES_USER=dvnapp"
#      - "POSTGRES_PASSWORD=secret"
#      - "SOLR_LOCATION=solr:8983"
#      - "TWORAVENS_LOCATION=NOT INSTALLED"
#      - "RSERVE_HOST=localhost"
#      - "RSERVE_PORT=6311"
#      - "RSERVE_USER=rserve"
#      - "RSERVE_PASSWORD=rserve"
#    depends_on:
#      - dataverse_postgres
#      - dataverse_solr
#    volumes:
#      - ./data/dataverse:/usr/local/glassfish4/glassfish/domains/domain1/files
#    restart: "on-failure:5"


volumes:
  database_data:
  rabbitmq_data:

networks:
  worsica_net:
    ipam:
      driver: default
